<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 栖迟于一丘</title>
    <link>http://yulingqiu.github.io/post/</link>
    <description>Recent content in Posts on 栖迟于一丘</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 25 Oct 2019 17:22:04 +0800</lastBuildDate>
    
	<atom:link href="http://yulingqiu.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>MySQL公司员工分析</title>
      <link>http://yulingqiu.github.io/post/mysql_excel/</link>
      <pubDate>Fri, 25 Oct 2019 17:22:04 +0800</pubDate>
      
      <guid>http://yulingqiu.github.io/post/mysql_excel/</guid>
      <description>一、分析目的 通过数据，分析企业员工结构，工资变化，以便了解公司的内部情况，改善企业管理方式。 二、 数据来源及数据字段定义 数据来源：employ</description>
    </item>
    
    <item>
      <title>常用数据分析模型</title>
      <link>http://yulingqiu.github.io/post/data_analysis_model/</link>
      <pubDate>Sat, 19 Oct 2019 20:33:47 +0800</pubDate>
      
      <guid>http://yulingqiu.github.io/post/data_analysis_model/</guid>
      <description>决定用写文章的方式来梳理自己数据分析的体系，这是系列文章的第二篇：《常用数据分析模型》 模型是指对于某个实际问题或客观事物、规律进行抽象后的一</description>
    </item>
    
    <item>
      <title>数据分析流程及常用方法</title>
      <link>http://yulingqiu.github.io/post/data_analysis_methods/</link>
      <pubDate>Thu, 17 Oct 2019 15:42:34 +0800</pubDate>
      
      <guid>http://yulingqiu.github.io/post/data_analysis_methods/</guid>
      <description>决定用写文章的方式来梳理自己数据分析的体系，这是系列文章的第一篇：《数据分析流程及常用方法》 数据分析的流程 数据分析闭环的流程为： 明确需求 明确</description>
    </item>
    
    <item>
      <title>牛客网-MySQL实战</title>
      <link>http://yulingqiu.github.io/post/mysql_exercises/</link>
      <pubDate>Wed, 16 Oct 2019 22:35:00 +0800</pubDate>
      
      <guid>http://yulingqiu.github.io/post/mysql_exercises/</guid>
      <description>1、查找最晚入职员工的所有信息 1 2 3 4 5 6 7 8 CREATE TABLE employees ( emp_no int(11) NOT NULL, birth_date date NOT NULL, first_name varchar(14) NOT NULL, last_name varchar(16) NOT NULL, gender char(1) NOT NULL, hire_date date NOT NULL, PRIMARY KEY (emp_no)); 1 2 3 4 5 6 SELECT * FROM employees WHERE hire_date = ( SELECT MAX(hire_date)</description>
    </item>
    
    <item>
      <title>如何提问</title>
      <link>http://yulingqiu.github.io/post/how_to_ask/</link>
      <pubDate>Mon, 14 Oct 2019 18:13:22 +0800</pubDate>
      
      <guid>http://yulingqiu.github.io/post/how_to_ask/</guid>
      <description>为什么要学会提问？ 我们在日常的工作和学习中，难免会遇到不懂不理解的问题，这时候我们就会向其他人（上司，领导，同事，社群成员）提问，但是我们在</description>
    </item>
    
    <item>
      <title>Python02高级特性</title>
      <link>http://yulingqiu.github.io/post/python-notes-02/</link>
      <pubDate>Sat, 12 Oct 2019 13:08:30 +0800</pubDate>
      
      <guid>http://yulingqiu.github.io/post/python-notes-02/</guid>
      <description>去除字符串首尾的空格 1 2 3 4 5 6 7 8 9 10 11 def trim(s): if s[:1] != &amp;#39; &amp;#39;: #当字符串开头没有空格后，开始判断结尾是否为空格 if s[-1:] != &amp;#39; &amp;#39;: return s else: return trim(s[:-1]) else: #先对字符串开</description>
    </item>
    
    <item>
      <title>Python01函数</title>
      <link>http://yulingqiu.github.io/post/python-notes-01/</link>
      <pubDate>Sat, 12 Oct 2019 13:04:28 +0800</pubDate>
      
      <guid>http://yulingqiu.github.io/post/python-notes-01/</guid>
      <description>函数是组织好的，可重复使用的，用来实现单一，或相关联功能的代码段。 函数能提高应用的模块性，和代码的重复利用率。Python提供了许多内建函数</description>
    </item>
    
    <item>
      <title>Python00基础</title>
      <link>http://yulingqiu.github.io/post/python-notes-00/</link>
      <pubDate>Fri, 11 Oct 2019 12:51:10 +0800</pubDate>
      
      <guid>http://yulingqiu.github.io/post/python-notes-00/</guid>
      <description>数据类型和变量 数据类型 Python基本的数据类型有：整数、浮点数、字符串、布尔值、空值。 Python的整数没有大小限制 浮点数（也就是小数，之</description>
    </item>
    
    <item>
      <title>MySQL入门</title>
      <link>http://yulingqiu.github.io/post/mysql-notes/</link>
      <pubDate>Thu, 10 Oct 2019 19:29:56 +0800</pubDate>
      
      <guid>http://yulingqiu.github.io/post/mysql-notes/</guid>
      <description>一、基本概念 1、数据库的好处： 持久化数据到本地： 使用完整的管理系统统一管理，易于查询（可以实现结构化查询，方便管理） 2、数据库的概念： DB(</description>
    </item>
    
  </channel>
</rss>